SearchMovesTest() Currently Executes in about 30 seconds

Performance Profiling with Visual Studio --- https://msdn.microsoft.com/en-us/library/ms182372.aspx

Call Stack:
	Engine Class:
		Engine.SearchMoves() ->
		Engine.SearchMovesAlphaBeta() ->
		Engine.AlphaBeta() ->

	Board Class:
		GetMovesOfSide() ->
	
	Piece Class:
		GetMoves() ->
		GetAttacks() ->
		
	Board Class:
		IsInCheck() ->
		
	Piece Class:
		GetAttacks() ->
		
		
		
TODO:	
	Store the board's moves with the board?
	Think about IDDFS	
	Add an opening Book.
	PGN (Portable Game Notation)
	UCI (Universal Chess Interface)
	Refactor ChessBoard.cs class. Think about threading issues?
	Try primitive arrays instead of C# generics?
	Try a bit board representation?
	Positional Play: Further Enhance each Piece's GetValue() method.

Done:
	Refactored Pawn.cs class GetMoves() method.
	Think about changing the initial values of alpha and beta in the initial call to AlphaBeta
	Castling over own pieces bug?
	
https://chessprogramming.wikispaces.com/Board+Representation


The git revert command undoes a committed snapshot. But, instead of removing the commit from the project history, it figures out how to undo the changes introduced by the commit and appends a new commit with the resulting content. This prevents Git from losing history, which is important for the integrity of your revision history and for reliable collaboration.
	